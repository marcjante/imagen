import numpy as np
import matplotlib.pyplot as plt
import cv2

# --- 1. Cargar la imagen RGB ---
img_path = "tu_imagen.jpg"   # <-- Reemplaza con el nombre del archivo
rgb = cv2.imread(img_path)
rgb = cv2.cvtColor(rgb, cv2.COLOR_BGR2RGB)

# Redimensionar para acelerar la demo (opcional)
rgb = cv2.resize(rgb, (512, 512))

# --- 2. Crear mapas simulados de biomarcadores ---
# Simulamos con ruido gaussiano y gradientes para que parezcan mapas espectrales
h, w, _ = rgb.shape
np.random.seed(42)

def simulate_map(scale=1.0, bias=0.0):
    base = np.linspace(0, 1, w)
    gradient = np.tile(base, (h, 1))
    noise = 0.05 * np.random.randn(h, w)
    return np.clip(scale*gradient + bias + noise, 0, 1)

maps = {
    "Blood Perfusion": simulate_map(scale=0.8, bias=0.1),
    "Pigmentation": simulate_map(scale=0.5, bias=0.3),
    "Bilirubin Level": simulate_map(scale=0.7, bias=0.2),
    "Oxygenated Hemoglobin (HbO2)": simulate_map(scale=1.0, bias=0.0),
    "Deoxygenated Hemoglobin (Hb)": simulate_map(scale=0.6, bias=0.2),
    "Oxygen Saturation (SpO2)": simulate_map(scale=0.9, bias=0.1),
    "Porphyrin Fluorescence": simulate_map(scale=0.8, bias=0.15),
}

# --- 3. Crear figura multipanel ---
fig, axes = plt.subplots(2, 4, figsize=(20, 10))
axes = axes.flatten()

# Primer panel: RGB original
axes[0].imshow(rgb)
axes[0].set_title("RGB", fontsize=14)
axes[0].axis('off')

# Restantes paneles: biomarcadores
for ax, (name, data) in zip(axes[1:], maps.items()):
    im = ax.imshow(data, cmap='jet')   # mapa tipo jet
    ax.set_title(name, fontsize=12)
    ax.axis('off')
    cbar = plt.colorbar(im, ax=ax, fraction=0.046, pad=0.04)
    cbar.ax.tick_params(labelsize=8)

# Ocultar paneles vacíos si no usamos todos
for i in range(len(maps)+1, len(axes)):
    axes[i].axis('off')

plt.tight_layout()
plt.savefig("hiperespectral_mosaico.jpg", dpi=150)
plt.show()

print("✅ Mosaico guardado como hiperespectral_mosaico.jpg")
